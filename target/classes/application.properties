# The Kafka broker location (defaults to localhost:9092)
kafka.bootstrap.servers=localhost:9092

# Configuring the incoming channel (reading from Kafka)
mp.messaging.incoming.movies-in.connector=smallrye-kafka
mp.messaging.incoming.movies-in.topic=movies
#mp.messaging.incoming.movies-in.key.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
#mp.messaging.incoming.movies-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Configuring the outgoing channel (writing to Kafka)
mp.messaging.outgoing.movies-out.connector=smallrye-kafka
mp.messaging.outgoing.movies-out.topic=movies
#mp.messaging.outgoing.movies-out.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
#mp.messaging.outgoing.movies-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer


mp.messaging.outgoing.movies-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer



# After having configured the broker location with kafka.bootstrap.servers, we configure our two channels:
# movies-in (receiving the records) and movies-out (publishing the records).

# We use the mp.messaging.incoming.movies-in prefix to configure the channel.
# The connector attribute indicates who?s responsible for this channel, here the Kafka connector.
# We also need to configure the key and value deserializers.

# To configure the outbound movies-out channel, we use the mp.messaging.outgoing.movies-out prefix.
# In addition to indicate who?s responsible for that channel, we also need to configure the key and value serializers.
